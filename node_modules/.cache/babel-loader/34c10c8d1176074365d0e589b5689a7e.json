{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saruh\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\React\\\\my-movies\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport axios from 'axios';\nimport AddMovie from './AddMovie';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      searchQuery: \"\"\n    };\n\n    this.deleteMovie = async movie => {\n      axios.delete(`http://localhost:3002/movies/${movie.id}`);\n      const newMovieList = this.state.movies.filter(m => m.id !== movie.id);\n      this.setState({\n        movies: newMovieList\n      });\n    };\n\n    this.searchMovie = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    this.addMovie = async movie => {\n      await axios.post(`http://localhost:3002/movies/`, movie);\n      this.setState(state => ({\n        movies: state.movies.concat([movie])\n      }));\n    };\n  }\n\n  /*async componentDidMount(){\r\n    const baseURL= \"http://localhost:3002/movies\" //npx json-server --watch src/api/movies.json --port 3002\r\n    const response= await fetch(baseURL)\r\n    console.log(response)\r\n    const data = await response.json();\r\n    console.log(data)\r\n    this.setState({movies : data})\r\n  }*/\n  async componentDidMount() {\n    const response = await axios.get(\"http://localhost:3002/movies\");\n    this.setState({\n      movies: response.data\n    });\n  }\n  /*deleteMovie = (movie) => {\r\n    const newMovieList = this.state.movies.filter(\r\n      m => m.id !== movie.id)\r\n    this.setState(\r\n      {\r\n        movies: newMovieList\r\n      })\r\n  }*/\n  //FETCH API\n\n  /* deleteMovie = async (movie) => {\r\n     const baseURL = `http://localhost:3002/movies/${movie.id}`\r\n     await fetch(baseURL, {\r\n       method: \"DELETE\"\r\n     })\r\n     const newMovieList = this.state.movies.filter(\r\n       m => m.id !== movie.id)\r\n     this.setState(\r\n       {\r\n         movies: newMovieList\r\n       })\r\n   }*/\n  //AXIOS API\n\n\n  render() {\n    let filteredMovies = this.state.movies.filter(movie => {\n      return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lgBen-12\",\n                children: /*#__PURE__*/_jsxDEV(SearchBar, {\n                  searchMovieProp: this.searchMovie\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n              deleteMovieProps: this.deleteMovie,\n              movies: filteredMovies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          exact: true,\n          render: history => /*#__PURE__*/_jsxDEV(AddMovie, {\n            onAddMovie: movie => {\n              this.addMovie(movie);\n              history.push(\"/\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/saruh/OneDrive/Masaüstü/React/my-movies/src/components/App.js"],"names":["React","SearchBar","MovieList","axios","AddMovie","BrowserRouter","Router","Route","App","Component","state","movies","searchQuery","deleteMovie","movie","delete","id","newMovieList","filter","m","setState","searchMovie","event","target","value","addMovie","post","concat","componentDidMount","response","get","data","render","filteredMovies","name","toLowerCase","indexOf","history","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport MovieList from './MovieList';\r\nimport axios from 'axios';\r\nimport AddMovie from './AddMovie';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    movies: [],\r\n    searchQuery: \"\"\r\n  }\r\n\r\n  /*async componentDidMount(){\r\n    const baseURL= \"http://localhost:3002/movies\" //npx json-server --watch src/api/movies.json --port 3002\r\n    const response= await fetch(baseURL)\r\n    console.log(response)\r\n    const data = await response.json();\r\n    console.log(data)\r\n    this.setState({movies : data})\r\n  }*/\r\n\r\n  async componentDidMount() {\r\n    const response = await axios.get(\"http://localhost:3002/movies\")\r\n    this.setState({ movies: response.data })\r\n  }\r\n\r\n  /*deleteMovie = (movie) => {\r\n    const newMovieList = this.state.movies.filter(\r\n      m => m.id !== movie.id)\r\n    this.setState(\r\n      {\r\n        movies: newMovieList\r\n      })\r\n  }*/\r\n\r\n  //FETCH API\r\n  /* deleteMovie = async (movie) => {\r\n     const baseURL = `http://localhost:3002/movies/${movie.id}`\r\n     await fetch(baseURL, {\r\n       method: \"DELETE\"\r\n     })\r\n     const newMovieList = this.state.movies.filter(\r\n       m => m.id !== movie.id)\r\n     this.setState(\r\n       {\r\n         movies: newMovieList\r\n       })\r\n   }*/\r\n\r\n  //AXIOS API\r\n  deleteMovie = async (movie) => {\r\n    axios.delete(`http://localhost:3002/movies/${movie.id}`)\r\n    const newMovieList = this.state.movies.filter(\r\n      m => m.id !== movie.id)\r\n    this.setState(\r\n      {\r\n        movies: newMovieList\r\n      })\r\n  }\r\n\r\n\r\n  searchMovie = (event) => {\r\n    this.setState({ searchQuery: event.target.value })\r\n  }\r\n\r\n  addMovie = async (movie) => {\r\n    await axios.post(`http://localhost:3002/movies/`, movie)\r\n    this.setState(state => ({\r\n      movies: state.movies.concat([movie])\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    let filteredMovies = this.state.movies.filter(\r\n      (movie) => {\r\n        return movie.name.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1;\r\n      }\r\n    )\r\n    return (\r\n      <Router>\r\n\r\n        <div className=\"container\">\r\n          <Route path=\"/\" exact render={() => (\r\n            <React.Fragment>\r\n              <br></br>\r\n              <div className=\"row\">\r\n                <div className=\"col-lgBen-12\">\r\n                  <SearchBar searchMovieProp={this.searchMovie} />\r\n                </div>\r\n              </div>\r\n\r\n              <MovieList\r\n                deleteMovieProps={this.deleteMovie}\r\n                movies={filteredMovies} />\r\n            </React.Fragment>\r\n          )}>\r\n          </Route>\r\n\r\n          <Route path=\"/add\" exact render={(history) => (\r\n            <AddMovie\r\n              onAddMovie={(movie) => {this.addMovie(movie)\r\n              history.push(\"/\") }}\r\n            />\r\n          )}>\r\n          </Route>\r\n\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}